<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>amalog.net</title>
    <link>http://amalog.net/</link>
    <description>Recent content on amalog.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 11 Jun 2016 02:06:04 +0900</lastBuildDate>
    <atom:link href="http://amalog.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>集合型で2次元リスト中の重複した行を削除する</title>
      <link>http://amalog.net/post/extract-unique-data/</link>
      <pubDate>Sat, 11 Jun 2016 02:06:04 +0900</pubDate>
      
      <guid>http://amalog.net/post/extract-unique-data/</guid>
      <description>

&lt;p&gt;データセットの中でユニークなデータをカウントしたい時があります。&lt;/p&gt;

&lt;p&gt;重複を含んだリストの場合、
一度集合型(set型)に変換することで重複を排除することができます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;In [1]: lst = [0, 1, 0, 3, 2, 1, 1]

In [2]: set(lst)
Out[2]: {0, 1, 2, 3}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかし、2次元配列にこの方法を適用しようとすると、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;In [1]: arr = [[0,1,0], [1,1,0], [0,0,1], [0,1,0], [1,1,1], [1,1,0]]

In [2]: set(arr)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-13-1e4050a05c36&amp;gt; in &amp;lt;module&amp;gt;()
----&amp;gt; 1 set(arr)

TypeError: unhashable type: &#39;list&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と怒られます。これは、
&lt;strong&gt;リストがhashableでない&lt;/strong&gt;
ことが原因です。&lt;/p&gt;

&lt;p&gt;hashableなオブジェクトは、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;代入後の変更が不可能&lt;/li&gt;
&lt;li&gt;他のオブジェクトと比較できる&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という特徴を持ちます。
リストは代入後の変更が可能であるため、hashableではないと言えます。&lt;/p&gt;

&lt;p&gt;辞書型と集合型は内部でハッシュ値を使っているため、
辞書のキーや集合のメンバにはhashableなオブジェクトしかなれません。
後者の例の場合、1次元のリストを集合型のメンバにしようとしたためエラーが出たのです。&lt;/p&gt;

&lt;h1 id=&#34;解決方法:f4d7d84857d77d53d571ea5976181f8b&#34;&gt;解決方法&lt;/h1&gt;

&lt;p&gt;ざっくり言うと、リストがダメなら
&lt;strong&gt;hashableなオブジェクトに変換してしまえば良い&lt;/strong&gt;
ということです。&lt;/p&gt;

&lt;p&gt;各行をタプルに変換します。
タプルはhashableなので、集合型を使ってユニークなデータを抽出できます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;In [1]: arr = [[0,1,0], [1,1,0], [0,0,1], [0,1,0], [1,1,1], [1,1,0]]

In [2]: set(map(tuple, arr))
Out[2]: {(1, 1, 0), (0, 1, 0), (0, 0, 1), (1, 1, 1)}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;参考資料:f4d7d84857d77d53d571ea5976181f8b&#34;&gt;参考資料&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.python.jp/3.5/library/stdtypes.html?highlight=hashable&#34;&gt;Python標準ライブラリ 組み込み型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Jupyter Notebookで作る快適なデータ解析ライフ</title>
      <link>http://amalog.net/post/data-analysis-with-jupyter/</link>
      <pubDate>Wed, 01 Jun 2016 00:28:25 +0900</pubDate>
      
      <guid>http://amalog.net/post/data-analysis-with-jupyter/</guid>
      <description>

&lt;p&gt;研究室に配属され、Pythonでデータ解析をするようになって2ヶ月が経過しました。&lt;/p&gt;

&lt;p&gt;データ解析のベストプラクティスは探してもあまり出てこないのですが、
試行錯誤の結果ひとつの形に辿り着いたのでアウトプットしておきます。&lt;/p&gt;

&lt;p&gt;データ解析と普通のプログラミングの違う点は「正しい実行結果」というのが分かりづらく、
Trial-and-Errorなアプローチになりがちなところだと思います。
その際、Jupyterで実行結果を適宜確認しながら解析を進められるのは安心感があります。&lt;/p&gt;

&lt;h1 id=&#34;フォルダ構成:cefb4b859976ea1d247097a5fdd4ee77&#34;&gt;フォルダ構成&lt;/h1&gt;

&lt;p&gt;フォルダ構成はざっくりこんな感じです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
├── data
│   └── hoge.csv
├── libs
│   ├── fuga.py
│   └── tests
│       └── test_fuga.py
├── notes
├── documents
└── experiment.ipynb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再利用したいコードは全部&lt;code&gt;libs&lt;/code&gt;に入れ、適宜テストを書きながら実装を進めます。&lt;/p&gt;

&lt;p&gt;メモは&lt;code&gt;notes&lt;/code&gt;の中にMarkdownかJupyterで書き、
結果を残したいケーススタディとか実験とかはJupyterを使ってまとめます。&lt;/p&gt;

&lt;p&gt;TeXファイルやらPowerPointファイルやらは&lt;code&gt;documents&lt;/code&gt;の中に放り込みます。&lt;/p&gt;

&lt;h1 id=&#34;工夫したところ:cefb4b859976ea1d247097a5fdd4ee77&#34;&gt;工夫したところ&lt;/h1&gt;

&lt;p&gt;解析の初期では全部pythonスクリプト内で完結させようと考えていたのですが、
ログを残したりプロットを保存したりするのが面倒でした。&lt;/p&gt;

&lt;p&gt;そこで、今までメモやちょっとした実験程度にしか使っていなかったJupyterを格上げし、
実際の解析スクリプトを全部Jupyterに移行してしまおうと考えました。&lt;/p&gt;

&lt;p&gt;まだ少ししか使っていないので有用かどうかはわかりませんが、今のところは問題なさそうです。&lt;/p&gt;

&lt;h1 id=&#34;関連記事:cefb4b859976ea1d247097a5fdd4ee77&#34;&gt;関連記事&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://amalog.net/post/jupyter-server/&#34;&gt;Jupyter Notebookをサーバー上で動かす&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Jupyter Notebookをサーバー上で動かす</title>
      <link>http://amalog.net/post/jupyter-server/</link>
      <pubDate>Tue, 31 May 2016 10:37:08 +0900</pubDate>
      
      <guid>http://amalog.net/post/jupyter-server/</guid>
      <description>

&lt;p&gt;Jupyter Notebookをサーバー上で動かした時のメモです。&lt;/p&gt;

&lt;p&gt;前提&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;サーバーにsshで接続できる&lt;/li&gt;
&lt;li&gt;サーバーにjupyterが入っている&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下はサーバー上にsshで接続して操作を行ってください。&lt;/p&gt;

&lt;h1 id=&#34;パスワードの生成:a640c7d84fd41d9fa336f977338f64f8&#34;&gt;パスワードの生成&lt;/h1&gt;

&lt;p&gt;自分のJupyter Notebookを他人にいじられると困るので、パスワードでロックをかけます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;$ python
&amp;gt;&amp;gt;&amp;gt; from notebook.auth import passwd
&amp;gt;&amp;gt;&amp;gt; passwd()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;パスワードを適当に入力してsha鍵を生成したら、コピーしておきます。&lt;/p&gt;

&lt;h1 id=&#34;jupyterの設定:a640c7d84fd41d9fa336f977338f64f8&#34;&gt;Jupyterの設定&lt;/h1&gt;

&lt;p&gt;Jupyterのコンフィグファイルを生成します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ jupyter notebook --generate-config
$ vi ~/.jupyter/jupyter_notebook_config.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下の3行のコメントアウトをはずし、変更します&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;c.NotebookApp.ip = &#39;*&#39;
c.NotebookApp.password = &amp;lt;input your sha key&amp;gt;
c.NotebookApp.open_browser = False
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;jupyterの起動:a640c7d84fd41d9fa336f977338f64f8&#34;&gt;Jupyterの起動&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ jupyter notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回やったのはこれだけです。&lt;/p&gt;

&lt;p&gt;VPN上のサーバーでごにょごにょやる分にはとりあえずOKだと思いますが、時間があったらセキュアに接続する方法をやってみます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>週末の過ごし方がわからない</title>
      <link>http://amalog.net/post/weekend-melancory/</link>
      <pubDate>Sat, 28 May 2016 18:10:40 +0900</pubDate>
      
      <guid>http://amalog.net/post/weekend-melancory/</guid>
      <description>&lt;p&gt;平日が慌ただしく過ぎていく。データの解析をして、論文を呼んで、ディスカッションをして。
適度に息抜きをしつつやっているものの、気づいたらすぐに金曜日がやってくる。&lt;/p&gt;

&lt;p&gt;多くの人は月曜日が憂鬱で仕方ないという。休日が待ち遠しくて仕方ないと。
三連休なんて来た時には小躍りして喜ぶ人もいると思う。&lt;/p&gt;

&lt;p&gt;逆なのだ。
休日の過ごし方がわからない。
平日は研究をして、休日は趣味に熱中でもすればいいんだろうけれど、
ざっくり言うと研究が趣味なのだ。正確に言えば、趣味を研究にしてしまったのだ。
平日が楽しくて仕方がない。早く大学に行ってパソコンを立ち上げたい。&lt;/p&gt;

&lt;p&gt;本当に頭がいい人が実績で殴ってくるような、多くの刺激を受ける環境に置かれているのだから自分も、
という思いがないわけではない。&lt;/p&gt;

&lt;p&gt;結局、休みの日は家でキーボードを叩く。
家でいるのに飽きたらちょっとでかけてドトールかどこかでキーボードを叩く。&lt;/p&gt;

&lt;p&gt;休日ってなんだろうね。
世の中の人達は休日に何をやっているんだろう。&lt;/p&gt;

&lt;p&gt;映画でも見てゆっくりしたほうがいいのか。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://amalog.net/about/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://amalog.net/about/</guid>
      <description>

&lt;p&gt;はじめまして。amaneといいます。1994年生まれの横浜育ちです。&lt;/p&gt;

&lt;p&gt;都内で工学部の大学生をやっています。
分野はケモインフォマティクスと言って、機械学習やディープラーニングを使って化学のデータを解析しています。&lt;/p&gt;

&lt;p&gt;趣味はプログラミングと競技かるた、それと申し訳程度に読書をしています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/sakueji&#34;&gt;Twitter&lt;/a&gt;はほそぼそと。有益な情報はつぶやかないかもしれません。
&lt;a href=&#34;https://www.facebook.com/amane.suzu&#34;&gt;Facebook&lt;/a&gt;はリアルの知り合いだけと友達になっています。
最近は&lt;a href=&#34;https://github.com/amaotone&#34;&gt;Github&lt;/a&gt;を頑張りたいと思っています。&lt;/p&gt;

&lt;h1 id=&#34;education:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Education&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;B.S. in Chemical Engineering: &lt;strong&gt;The University of Tokyo&lt;/strong&gt;, Japan, in progress.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Online Courses&lt;/strong&gt;: Stanford University, &amp;ldquo;Machine Learning&amp;rdquo;, in progress.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;skills:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Skills&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Systems&lt;/strong&gt;: Windows, Mac, Linux&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Git, GitHub&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web Design&lt;/strong&gt;: HTML, CSS (sass+compass), JavaScript

&lt;ul&gt;
&lt;li&gt;Wordpress&lt;/li&gt;
&lt;li&gt;Jekyll, Middleman, Hugo&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Programming&lt;/strong&gt;: Ruby, Python, JavaScript, PHP&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DTP&lt;/strong&gt;: InDesign, Illustrator&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;contacts:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Contacts&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;asuzuki_at_chemsys.t.u-tokyo.ac.jp&lt;/li&gt;
&lt;li&gt;amane.suzu_at_gmail.com&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MacBook Pro環境設定メモ</title>
      <link>http://amalog.net/post/macbook-pro-init/</link>
      <pubDate>Wed, 04 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://amalog.net/post/macbook-pro-init/</guid>
      <description>

&lt;h1 id=&#34;ソフトウェア:a47e79b698dcfd74ba3f68b5e0d07938&#34;&gt;ソフトウェア&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;homebrew-cask&lt;/code&gt;を使うとバイナリもhomebrewで入れられて便利！
みたいな話を聞いたけど、いろいろ問題点もあるみたいなので今回は見送りました。&lt;/p&gt;

&lt;p&gt;愚直に入れます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;Alfred&lt;/li&gt;
&lt;li&gt;Google Chrome&lt;/li&gt;
&lt;li&gt;Google Japanese IME&lt;/li&gt;
&lt;li&gt;Mou&lt;/li&gt;
&lt;li&gt;The Unarchiver&lt;/li&gt;
&lt;li&gt;Karabiner&lt;/li&gt;
&lt;li&gt;iterm2&lt;/li&gt;
&lt;li&gt;App Cleaner&lt;/li&gt;
&lt;li&gt;Evernote&lt;/li&gt;
&lt;li&gt;Dropbox&lt;/li&gt;
&lt;li&gt;Skype&lt;/li&gt;
&lt;li&gt;SourceTree&lt;/li&gt;
&lt;li&gt;Kobito&lt;/li&gt;
&lt;li&gt;imageoptim&lt;/li&gt;
&lt;li&gt;xmind&lt;/li&gt;
&lt;li&gt;ThunderBird&lt;/li&gt;
&lt;li&gt;PyCharm&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;homebrew:a47e79b698dcfd74ba3f68b5e0d07938&#34;&gt;homebrew&lt;/h1&gt;

&lt;p&gt;パッケージマネージャはみんな大好きhomebrewです。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ /usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;入れたもの:a47e79b698dcfd74ba3f68b5e0d07938&#34;&gt;入れたもの&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;gist&lt;/li&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;tree&lt;/li&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;li&gt;zsh&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;wget&lt;/li&gt;
&lt;li&gt;pyenv&lt;/li&gt;
&lt;li&gt;rbenv&lt;/li&gt;
&lt;li&gt;ruby-build&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;python:a47e79b698dcfd74ba3f68b5e0d07938&#34;&gt;Python&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;~/.bash_profile&lt;/code&gt;に追記&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot;
export PATH=&amp;quot;$PYENV_ROOT/bin:$PATH&amp;quot;
eval &amp;quot;$(pyenv init -)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;$ source ~/.bash_profile&lt;/code&gt;をお忘れなく。&lt;/p&gt;

&lt;p&gt;主にデータ処理をやるので&lt;code&gt;anaconda&lt;/code&gt;を入れます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pyenv install anaconda3-4.0.0
$ pyenv global anaconda3-4.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;ruby:a47e79b698dcfd74ba3f68b5e0d07938&#34;&gt;Ruby&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;~/.bash_profile&lt;/code&gt;に追記&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[[ -d ~/.rbenv  ]] &amp;amp;&amp;amp; \
export PATH=${HOME}/.rbenv/bin:${PATH} &amp;amp;&amp;amp; \
eval &amp;quot;$(rbenv init -)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;$ source ~/.bash_profile&lt;/code&gt;をお忘れなく。&lt;/p&gt;

&lt;p&gt;とりあえず最新版の&lt;code&gt;2.3.1&lt;/code&gt;を入れます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rbenv install 2.3.1
$ rbenv global 2.3.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;フォント:a47e79b698dcfd74ba3f68b5e0d07938&#34;&gt;フォント&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Ricty Diminished&lt;/li&gt;
&lt;li&gt;Myrica&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>